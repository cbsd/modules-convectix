#!/usr/local/bin/cbsd
#v13.1.0
MYARG="mode"
MYOPTARG="dryrun"
MYDESC="Upgrade MyB/ClonOS via pkg"
ADDHELP="dryrun - (1 - default ) chech for updates only"

. ${subr}
dryrun=1
. ${cbsdinit}
. ${system}

[ ! -r /root/bin/upgrade.sh ] && err 1 "${W1_COLOR}${CBSD_APP}: ${N1_COLOR}no such script: ${N2_COLOR}/root/bin/upgrade.sh${N0_COLOR}"

upgrade_packages()
{
	case "${dryrun}" in
		1)
			/root/bin/upgrade.sh
			;;
		0)
			/root/bin/upgrade.sh start
			;;
		*)
			err 1 "${W1_COLOR}${CBSD_APP}: ${N1_COLOR}unknown dryrun: ${N2_COLOR}${dryrun}${N0_COLOR}"
			;;
	esac
}

list_packages()
{
	cbsd_ver=$( /usr/local/bin/cbsd version 2>/dev/null | ${AWK_CMD} '{printf $1}' )
	php_ver=$( ${PKG_CMD} info php[0-9][0-9]-[0-9]* 2>/dev/null )
	myb_ver=$( ${PKG_CMD} info myb 2>/dev/null | ${GREP_CMD} ^Version | ${CUT_CMD} -d : -f 2 | ${AWK_CMD} '{printf $1}' )
	clonos_ver=$( ${PKG_CMD} info clonos 2>/dev/null | ${GREP_CMD} ^Version | ${CUT_CMD} -d : -f 2 | ${AWK_CMD} '{printf $1}' )

	cbsd_api=$( ${PKG_CMD} info cbsd-mq-api 2>/dev/null | ${GREP_CMD} ^Version | ${CUT_CMD} -d : -f 2 | ${AWK_CMD} '{printf $1}' )
	cbsd_router=$( ${PKG_CMD} info cbsd-mq-router 2>/dev/null | ${GREP_CMD} ^Version | ${CUT_CMD} -d : -f 2 | ${AWK_CMD} '{printf $1}' )

	[ -n "${cbsd_ver}" ] && echo "CBSD: ${cbsd_ver}"
	[ -n "${cbsd_api}" ] && echo "CBSD API: ${cbsd_api}"
	[ -n "${cbsd_router}" ] && echo "CBSD Router: ${cbsd_router}"
	[ -n "${php_ver}" ] && echo "CBSD: ${php_ver}"
	[ -n "${myb_ver}" ] && echo "MyBee: ${myb_ver}"
	[ -n "${clonos_ver}" ] && echo "ClonOS: ${clonos_ver}"

}

case "${mode}" in
	list)
		list_packages
		;;
	upgrade)
		upgrade_packages
		;;
	*)
		err 1 "${W1_COLOR}${CBSD_APP}: ${N1_COLOR}unknown mode: ${N2_COLOR}${mode}${N0_COLOR}"
		;;
esac

exit 0
